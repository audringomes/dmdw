#% text_encoding = iso8859_1
# ************************************************************
#
# BOOGERT-LAB / Realworld Software Products BV 2021
#
# ************************************************************

_package sw

_pragma(classify_level=basic, topic={dmdw,dm_svg_writer},usage={internal})
_method case_hetero_relationship.as_svg_circle( p_properties )
	## 
	##
	
	>> _self.location.as_svg_circle( p_properties )	
	
_endmethod
$

_pragma(classify_level=basic, topic={dmdw,dm_svg_writer},usage={internal})
_method case_hetero_relationship.as_diagram_element( p_properties )
	## 
	##

	_local l_xml << sw:simple_xml_thing.new(:g,rope.new(),
						property_list.new_with(:id,_self.name.write_string,
								       :description,_self.type.as_charvec()))

	l_xml.elements.add(_self.as_svg_circle( p_properties ) )

	_if (l_txt << _self.title_text).is_kind_of?("")
	_then l_xml.elements.add( sw:simple_xml_thing.new(:title, l_txt) )
	_endif
	
	_if (l_hlink << _self.a_element( p_properties )) _isnt _unset 
	_then l_hlink.elements.add( l_xml )
	      _return l_hlink
	_endif
	
	>> l_xml
_endmethod
$

_pragma(classify_level=basic, topic={dmdw,dm_svg_writer},usage={internal})
_method case_hetero_relationship.title_text
	## 
	## Returns a description for the title element
	
	>> _if (l_t<<_self.description) _is _unset 
	   _then >> write_string(_self.name)
	   _else >> write_string(_self.name,newline_char,l_t)
	   _endif

_endmethod
$
